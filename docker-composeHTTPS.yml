version: '3.9'
services:
  front-container:
    build:
      context: .
      dockerfile: front.dockerfile
    volumes:
      - ./blg_front:/web
      - ./ssl:/ssl
    environment:
      PORT: 443
      HTTPS: true
      SSL_CRT_FILE: /ssl/cert.pem
      SSL_KEY_FILE: /ssl/privkey.pem
      DANGEROUSLY_DISABLE_HOST_CHECK: "true"
    ports:
      - "443:443"
    working_dir: /web
    command: sh -c "npm install --no-fund --no-audit && npm start"
    depends_on:
      - api-container
  api-container:
    build:
      context: .
      dockerfile: api.dockerfile
    volumes:
      - ./blg_api:/web
    working_dir: /web
    command: sh -c "npm install --no-fund --no-audit && rm -rf dist/* && npm run build && npm run start"
    restart: on-failure
    depends_on:
      db-container:
        condition: service_healthy
  db-container:
    image: mysql/mysql-server
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-ptoor"]
      interval: 5s
      retries: 10
    environment:
      MYSQL_ROOT_PASSWORD: toor
      MYSQL_USER: user
      MYSQL_PASSWORD: pass
      MYSQL_DATABASE: db
      MYSQL_TZ: Europe/Bucharest
    ports:
      - "3306:3306"
    volumes:
      - ./blg_db/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./blg_db/data:/var/lib/mysql

networks:
  default:
    name: react-blog_default
